name: Deploy Kubernetes Infra

on:
  push:
    branches:
      - main
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Iniciando com credenciais adicionadas anteriormente
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Install Kubectl (generic installation method)
      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6`1

      # Terraform Execution
      - name: Terraform Init
        run: |
          terraform init -reconfigure

      - name: Terraform Format
        run: |
          terraform fmt

      - name: Terraform Plan
        run: |
          terraform plan

        # Extraindo os outputs ap√≥s o apply
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve

      - name: Update Kube Config
        run: aws eks update-kubeconfig --name EKS-fiap-tech-challenge --region us-east-1

      - name: Deploy Application
        run: |
          kubectl apply -f k8s/00-ns-lanchonete.yaml
          kubectl apply -f k8s/10-secret-lanchonete.yaml
          kubectl apply -f k8s/11-app-lanchonete-configmap.yaml
          kubectl apply -f k8s/21-app-lanchonete-service.yaml
          kubectl apply -f k8s/41-app-lanchonete-deployment.yaml

      # Terraform destroy
      - name: Terraform Destroy
        if: always()
        run: |
          terraform destroy -auto-approve
