name: Deploy Kubernetes Infra

on:
  push:
    branches:
      - main
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Install Kubectl (generic installation method)
      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6`1

      # Terraform Init
      - name: Terraform Init
        run: |
          cd envs/dev
          terraform init -reconfigure

      # Validate Terraform configuration
      - name: Terraform Validate
        run: |
          cd envs/dev
          terraform validate

      # Format check for Terraform files
      - name: Terraform Format Check
        run: |
          cd envs/dev
          terraform fmt -check

      # Terraform Plan
      - name: Terraform Plan
        run: |
          cd envs/dev
          terraform plan

      # Terraform Apply
      - name: Terraform Apply
        run: |
          cd envs/dev
          terraform apply -auto-approve

      - name: Update Kube Config
        # run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}            ADICIONAR ENVs
        run: aws eks update-kubeconfig --name EKS-fiap-tech-challenge --region us-east-1

      - name: Debug Kubeconfig
        run: |
          echo "Kubeconfig location: $KUBECONFIG"
          cat ~/.kube/config

      - name: Deploy EKS Without ALB
        run: |
          kubectl apply -f envs/dev/k8s/00-ns-lanchonete.yaml --validate=false
          kubectl apply -f envs/dev/k8s/10-secret-lanchonete.yaml --validate=false
          kubectl apply -f envs/dev/k8s/11-app-lanchonete-configmap.yaml --validate=false
          kubectl apply -f envs/dev/k8s/21-app-lanchonete-service.yaml --validate=false
          kubectl apply -f envs/dev/k8s/41-app-lanchonete-deployment.yaml --validate=false
